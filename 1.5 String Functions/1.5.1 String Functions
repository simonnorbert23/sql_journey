CREATE DATABASE book_shop;
USE book_shop;

CREATE TABLE books (
book_id INT AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(100),
author_fname VARCHAR(100),
author_lname VARCHAR(100),
released_year INT,
stock_quantity INT,
pages INT);

INSERT INTO books (title, author_fname, author_lname, released_year, stock_quantity, pages)
VALUES ('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
('Norse Mythology', 'Neil', 'Gaiman', 2016, 43, 304),
('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
('The Amazing Adventures of Kavalier and Clay', 'Michael', 'Chabon', 2000, 68, 634),
('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1989, 12, 526),
('Where I\'m Calling From: Selected Stories', 'Raymond', 'Carver', 1989, 12, 526),
('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343);

# concatenating: connects any pieces of string. Use after a SELECT statement
SELECT CONCAT('h', 'e', 'l');

# we can concatenate a column with another column
DESC books;
USE books;
SELECT author_fname FROM books;
SELECT CONCAT(author_fname, ' ', author_lname) FROM books;

# we can give the selection it's own column name
SELECT CONCAT(author_fname, ' ', author_lname) AS author_name FROM books;

# CONCAT_WS concatenates the indicated strings with a separator
SELECT CONCAT_WS('-', title, author_fname, author_lname) FROM books;

# to return a smaller portion of a larger string we can use SUBSTRING
# the virst value that we need to pass is the string we are analyzing
# the first number is the start character, the second number is the number of characters we recover starting from the first number
SELECT SUBSTRING('Hello World', 1, 4);
SELECT SUBSTRING('Hello World', 2, 4);

# if we don't specify the second number, it will return all characters from the starting point til the end of the string
SELECT SUBSTRING('Hello World', 5);

# if we use a negative number as a starting point, it will count back from the end of the string
SELECT SUBSTRING('Hello World', -4);
SELECT SUBSTRING('Hello World', -4, -7);

# SUBSTR() is a synonim for SUBSTRING()
SELECT SUBSTR(title, 1, 10) FROM books;
SELECT SUBSTR(author_lname, 1, 1) AS initial, author_lname FROM books;

# a way to combine the string functions
# the innermost thing in the nested functions will be evaluated first and the result past to the outer function
SELECT 
    CONCAT(SUBSTR(title, 1, 10), '...') AS short_title
FROM
    books;


SELECT 
    CONCAT(SUBSTR(author_fname, 1, 1),
            '.',
            SUBSTR(author_lname, 1, 1),
            '.') AS author_initials
FROM
    books;

# best practice: we can format SQL code to make it more readable
# we can use the paintbrush icon to 'beautify' the code

# we can replace a portion of a string with another string
# it will not update the table, just the printed data
# we need a default string, the substring we're replacing and a string we're replacing it with
SELECT REPLACE('Hello World', 'Hell', '#$%&');
SELECT REPLACE(title, ' ', '-') FROM books;


source: https://www.udemy.com/course/the-ultimate-mysql-bootcamp-go-from-sql-beginner-to-expert/learn
